version: '3.4'

services:
  db:
    image: mdillon/postgis:11-alpine
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - database
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    image: redis:6-alpine
    networks:
      - redis
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - redis-data:/data

  app_base: &app_base
    image: registry.github.com/vedoc/core-main:development
    build:
      context: .
      args:
        - ADDITIONAL_PACKAGES=nodejs-current
        - EXECJS_RUNTIME=Node
        - RAILS_ENV=development
        - NODE_ENV=development
        - GIT_CREDENTIALS=user:password
    environment:
      - APP_HOST=${APP_HOST}
      # Database
      - DB_HOST=localhost
      - DB_NAME=database-1
      - DB_USER=postchek1
      - DB_PASSWORD=Awsvedoc232323
      # Redis
      - REDIS_URL=${REDIS_URL}
      - REDIS_SIDEKIQ_URL=${REDIS_SIDEKIQ_URL}
      # Mailer Credentials
      - APP_EMAIL=${APP_EMAIL}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - SMTP_DOMAIN=${SMTP_DOMAIN}
      # Stripe & Firebase
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - FIREBASE_SERVER_KEY=${FIREBASE_SERVER_KEY}
      # Admin Credentials
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      # Mongo
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DB=${MONGO_DB}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_COLLECTION=${MONGO_COLLECTION}
    ports:
      - '3000:3000'
    networks:
      - database
      - socket
      - redis
      - mongo
    restart: always

  worker:
    <<: *app_base
    command: bundle exec sidekiq
    ports:
      - 5000
    healthcheck:
      test: "ps ax | grep -v grep | grep sidekiq"
      interval: 1m
      start_period: 1m

  admin:
    image: registry.github.com/vedoc/admin-panel:development
    build:
      context: ../admin-panel
      args:
        - ADDITIONAL_PACKAGES=nodejs-current
        - EXECJS_RUNTIME=Node
        - RAILS_ENV=development
        - NODE_ENV=development
        - GIT_CREDENTIALS=user:password
    environment:
      - APP_HOST=localhost:3001
      - FIREBASE_SERVER_KEY=${FIREBASE_SERVER_KEY}
      # Database
      - DB_HOST=database-1.c8zekncs5jhg.us-east-1.rds.amazonaws.com
      - DB_NAME=database-1
      - DB_USER=postgres
      - DB_PASSWORD=Awsvedoc232323
      # Admin Credentials
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      # Mailer Credentials
      - APP_EMAIL=${APP_EMAIL}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - SMTP_DOMAIN=${SMTP_DOMAIN}
    ports:
      - '3001:3001'
    networks:
      - database

  mongo:
    image: mongo:4
    # command: --smallfiles
    restart: always
    volumes:
      - mongo-data:/data/db
    networks:
      - mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password

  chat:
    image: registry.github.com/vedoc/vedoc-chat:development
    build: ../vedoc-chat
    restart: always
    # volumes: [ '../chat-node:/usr/src/app' ]
    environment:
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
      MONGO_HOST: ${MONGO_HOST}
      WAIT_HOSTS: mongo:27017
      WAIT_HOSTS_TIMEOUT: 60
    links:
      - mongo
    networks:
      - socket  
      - mongo
    ports:
      - 8080:8080
      # - "8080:3000"

volumes:
  db-data:
  mongo-data:
  redis-data:

networks:
  socket:
  database:
  redis:
  mongo:
